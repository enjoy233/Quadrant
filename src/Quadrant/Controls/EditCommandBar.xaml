<qc:AdapativeCommandBar
    x:Class="Quadrant.Controls.EditCommandBar"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:qc="using:Quadrant.Controls"
    xmlns:qf="using:Quadrant.Functions"
    Style="{StaticResource FunctionBarStyle}"
    IsAccessKeyScope="True"
    MinDefaultLabelRightWidth="1000"
    DefaultLabelPosition="Collapsed"
    IsDynamicOverflowEnabled="False"
    HorizontalContentAlignment="Stretch"
    OverflowButtonVisibility="Collapsed">
    <CommandBar.Resources>
        <x:Double x:Key="EditBarItemEntranceOffset">10</x:Double>

        <Storyboard x:Name="CommandEnterStoryboard">
            <PopInThemeAnimation TargetName="AcceptButton" FromHorizontalOffset="{StaticResource EditBarItemEntranceOffset}" />
            <PopInThemeAnimation TargetName="DeleteButton" FromHorizontalOffset="{StaticResource EditBarItemEntranceOffset}" />
            <PopInThemeAnimation TargetName="CancelButton" FromHorizontalOffset="{StaticResource EditBarItemEntranceOffset}" />
        </Storyboard>

        <Storyboard x:Name="InputEnterStoryboard">
            <PopInThemeAnimation TargetName="FunctionInput" FromHorizontalOffset="{StaticResource EditBarItemEntranceOffset}" />
        </Storyboard>

        <Style x:Key="AutoSuggestBoxTextBoxStyle" TargetType="TextBox">
            <Setter Property="MinWidth" Value="{ThemeResource TextControlThemeMinWidth}"/>
            <Setter Property="MinHeight" Value="{ThemeResource TextControlThemeMinHeight}"/>
            <Setter Property="Foreground" Value="{ThemeResource GraphForegroundBrush}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="SelectionHighlightColor" Value="{ThemeResource TextControlSelectionHighlightColor}"/>
            <Setter Property="BorderThickness" Value="0,2,2,2"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="IsSpellCheckEnabled" Value="False" />
            <Setter Property="IsTextPredictionEnabled" Value="False" />
            <Setter Property="InputScope" Value="Formula" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Disabled"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
            <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="False" />
            <Setter Property="Padding" Value="{ThemeResource TextControlThemePadding}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <Grid.Resources>
                                <Style x:Name="RetryButtonStyle" TargetType="Button">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Grid
                                                    x:Name="RootGrid"
                                                    Margin="2"
                                                    BorderBrush="{ThemeResource AppBarButtonRevealBorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Background="{ThemeResource TextControlButtonBackground}">
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal"/>

                                                            <VisualState x:Name="PointerOver">
                                                                <VisualState.Setters>
                                                                    <Setter Target="RootGrid.(RevealBrush.State)" Value="PointerOver" />
                                                                    <Setter Target="RootGrid.Background" Value="{ThemeResource AppBarButtonRevealBackgroundPointerOver}" />
                                                                    <Setter Target="RootGrid.BorderBrush" Value="{ThemeResource AppBarButtonRevealBorderBrushPointerOver}" />
                                                                    <Setter Target="GlyphElement.Foreground" Value="{ThemeResource AppBarButtonForegroundPointerOver}" />
                                                                </VisualState.Setters>
                                                            </VisualState>

                                                            <VisualState x:Name="Pressed">
                                                                <VisualState.Setters>
                                                                    <Setter Target="RootGrid.(RevealBrush.State)" Value="Pressed" />
                                                                    <Setter Target="RootGrid.Background" Value="{ThemeResource AppBarButtonRevealBackgroundPressed}" />
                                                                    <Setter Target="RootGrid.BorderBrush" Value="{ThemeResource AppBarButtonRevealBorderBrushPressed}" />
                                                                    <Setter Target="GlyphElement.Foreground" Value="{ThemeResource ButtonForegroundPressed}" />
                                                                </VisualState.Setters>
                                                            </VisualState>

                                                            <VisualState x:Name="Disabled">
                                                                <VisualState.Setters>
                                                                    <Setter Target="RootGrid.Background" Value="{ThemeResource ButtonRevealBackgroundDisabled}" />
                                                                    <Setter Target="RootGrid.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushDisabled}" />
                                                                    <Setter Target="GlyphElement.Foreground" Value="{ThemeResource ButtonForegroundDisabled}" />
                                                                </VisualState.Setters>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <TextBlock
                                                        x:Name="GlyphElement"
                                                        AutomationProperties.AccessibilityView="Raw"
                                                        Foreground="{ThemeResource ButtonForeground}"
                                                        FontStyle="Normal"
                                                        FontSize="{TemplateBinding FontSize}"
                                                        FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                                        HorizontalAlignment="Center"
                                                        Text="&#xE72C;"
                                                        VerticalAlignment="Center"/>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Grid.Resources>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="RetryStates">
                                    <VisualState x:Name="RetryButtonCollapsed"/>
                                    <VisualState x:Name="RetryButtonVisible">
                                        <VisualState.Setters>
                                            <Setter Target="RetryButton.Visibility" Value="Visible" />
                                        </VisualState.Setters>

                                        <VisualState.Storyboard>
                                            <Storyboard>
                                                <PopInThemeAnimation
                                                    TargetName="RetryButton"
                                                    FromVerticalOffset="0"
                                                    FromHorizontalOffset="-20"/>
                                            </Storyboard>
                                        </VisualState.Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Border
                                x:Name="BorderElement"
                                Grid.ColumnSpan="2"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" />
                            <ScrollViewer
                                x:Name="ContentElement"
                                AutomationProperties.AccessibilityView="Raw"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                IsTabStop="False"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                                IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                                IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                Margin="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                ZoomMode="Disabled"/>
                            <Button
                                x:Uid="RetryButton"
                                x:Name="RetryButton"
                                AccessKey="R"
                                Click="GetNextStrokeFit"
                                BorderThickness="{ThemeResource AppBarButtonRevealBorderThemeThickness}"
                                Grid.Column="1"
                                FontSize="{StaticResource CommandBarFontSize}"
                                MinWidth="{StaticResource CommandBarItemWidth}"
                                Style="{StaticResource RetryButtonStyle}"
                                Visibility="Collapsed"
                                VerticalAlignment="Stretch"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="AutoSuggestBoxStyle" TargetType="AutoSuggestBox">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="UpdateTextOnSelect" Value="False" />
            <Setter Property="TextBoxStyle" Value="{StaticResource AutoSuggestBoxTextBoxStyle}"/>
            <Setter Property="UseSystemFocusVisuals" Value="{ThemeResource IsApplicationFocusVisualKindReveal}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="AutoSuggestBox">
                        <Grid x:Name="LayoutRoot">
                            <TextBox
                                x:Name="TextBox"
                                Loaded="TextBox_Loaded"
                                SelectionChanged="TextBox_SelectionChanged"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                UseSystemFocusVisuals="{TemplateBinding UseSystemFocusVisuals}"
                                Style="{TemplateBinding TextBoxStyle}" />

                            <Popup x:Name="SuggestionsPopup">
                                <Border x:Name="SuggestionsContainer">
                                    <Border.RenderTransform>
                                        <TranslateTransform x:Name="UpwardTransform"/>
                                    </Border.RenderTransform>

                                    <ListView
                                        x:Name="SuggestionsList"
                                        BorderBrush="{ThemeResource SystemControlForegroundChromeHighBrush}"
                                        BorderThickness="{ThemeResource AutoSuggestListBorderThemeThickness}"
                                        Background="{ThemeResource SystemControlAltHighAcrylicElementBrush}"
                                        DisplayMemberPath="{TemplateBinding DisplayMemberPath}"
                                        IsItemClickEnabled="True"
                                        ItemTemplate="{TemplateBinding ItemTemplate}"
                                        ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                                        ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                        MaxHeight="{ThemeResource AutoSuggestListMaxHeight}"
                                        Margin="{ThemeResource AutoSuggestListMargin}"
                                        Padding="{ThemeResource AutoSuggestListPadding}">
                                        <ListView.ItemContainerTransitions>
                                            <TransitionCollection/>
                                        </ListView.ItemContainerTransitions>
                                    </ListView>
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PopupButton" TargetType="Button">
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="UseSystemFocusVisuals" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid
                            x:Name="RootGrid"
                            Background="{TemplateBinding Background}">
                            <ContentPresenter
                                x:Name="ContentPresenter"
                                AutomationProperties.AccessibilityView="Raw"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                Content="{TemplateBinding Content}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Padding="{TemplateBinding Padding}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </CommandBar.Resources>

    <AppBarButton
        x:Name="AcceptButton"
        x:Uid="AcceptButton"
        Icon="Accept"
        AccessKey="A"
        ToolTipService.ToolTip="{x:Bind AcceptButton.Label}"
        Click="{x:Bind Accept}" />
    <AppBarButton
        x:Name="DeleteButton"
        x:Uid="DeleteButton"
        Icon="Delete"
        AccessKey="D"
        ToolTipService.ToolTip="{x:Bind DeleteButton.Label}"
        Click="ClickDeleteButtonAsync" />
    <AppBarButton
        x:Name="CancelButton"
        x:Uid="CancelButton"
        Icon="Cancel"
        AccessKey="C"
        ToolTipService.ToolTip="{x:Bind CancelButton.Label}"
        Click="{x:Bind CancelEdit}" />

    <CommandBar.Content>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <Button
                x:Name="FunctionLabel"
                x:Uid="ColorButton"
                Content="{x:Bind Function, Mode=OneWay}"
                VerticalContentAlignment="Center"
                HorizontalContentAlignment="Center"
                ToolTipService.Placement="Top"
                Click="ColorButton_Click"
                AutomationProperties.Name="{x:Bind Function.Name, Mode=OneWay}">

                <Button.ContentTemplate>
                    <DataTemplate x:DataType="qf:FunctionData">
                        <qc:FunctionLabel
                            AutomationProperties.AccessibilityView="Raw"
                            Function="{x:Bind}"/>
                    </DataTemplate>
                </Button.ContentTemplate>

                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="RootGrid">
                            <ContentPresenter
                                x:Name="ContentPresenter"
                                AutomationProperties.AccessibilityView="Raw"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                Content="{TemplateBinding Content}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Button.Template>
            </Button>

            <AutoSuggestBox
                x:Uid="FunctionInput"
                x:Name="FunctionInput"
                Grid.Column="1"
                Height="{ThemeResource AppBarThemeCompactHeight}"
                TextChanged="FunctionInput_TextChanged"
                QuerySubmitted="FunctionInput_QuerySubmitted"
                Style="{StaticResource AutoSuggestBoxStyle}">
                <AutoSuggestBox.BorderBrush>
                    <RevealBorderBrush
                        Color="{x:Bind Function.Color, Mode=OneWay}"
                        Opacity="{StaticResource FunctionLabelRevealOpacity}"/>
                </AutoSuggestBox.BorderBrush>
                <FlyoutBase.AttachedFlyout>
                    <Flyout Placement="Top">
                        <Button
                            UseSystemFocusVisuals="False"
                            Background="Transparent"
                            Click="ClickPopup"
                            KeyDown="KeyDownPopup"
                            Style="{StaticResource PopupButton}">
                            <TextBlock
                                Text="{x:Bind ErrorMessage, Mode=OneWay}"
                                MaxWidth="{x:Bind FlyoutWidth, Mode=OneWay}"
                                TextWrapping="WrapWholeWords"/>
                        </Button>
                    </Flyout>
                </FlyoutBase.AttachedFlyout>
            </AutoSuggestBox>
        </Grid>
    </CommandBar.Content>
</qc:AdapativeCommandBar>
